<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
      xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans.xsd
           http://www.springframework.org/schema/aop
           http://www.springframework.org/schema/aop/spring-aop.xsd
            http://www.springframework.org/schema/context
           http://www.springframework.org/schema/context/spring-context.xsd
           http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
           http://www.springframework.org/schema/mvc
			http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd">
			<!-- 3.2支持 mvc:resources和mvc:default-servlet-handler的配置-->
           
  	<context:property-placeholder location="classpath:db.properties"/>
   	<!--<bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
   		<property name="driverClassName" value="${jdbc.driver}"/>
   		<property name="url" value="${jdbc.url}"/>
   		<property name="username" value="${jdbc.username}"/>
   		<property name="password" value="${jdbc.password}"/>
   </bean>    
    -->
    
    <!-- 配置德鲁伊数据源 -->
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" destroy-method="close">
    	<property name="driverClassName" value="${jdbc.driver}"/>
    	<property name="url" value="${jdbc.url}"/>
    	<property name="username" value="${jdbc.username}"/>
    	<property name="password" value="${jdbc.password}"></property>
    	<property name="filters" value="${jdbc.filters}"/>
    	<property name="maxActive" value="${jdbc.maxActive}"/>
    	<property name="initialSize" value="${jdbc.initialSize}"/>
    	<property name="maxWait" value="${jdbc.maxWait}"/>
    	<property name="minIdle" value="${jdbc.minIdle}"/>
    	
    	<property name="timeBetweenEvictionRunsMillis" value="60000" />
		<property name="minEvictableIdleTimeMillis" value="300000" />
		<property name="validationQuery" value="SELECT 'x'" />
		<property name="testWhileIdle" value="true" />
		<property name="testOnBorrow" value="false" />
		<property name="testOnReturn" value="false" />
		<property name="poolPreparedStatements" value="true" />
		<property name="maxOpenPreparedStatements" value="20" />
    </bean>
    
    <!-- 配置SqlSessionFactory,目的是的到SqlSessionFactory对象-->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource"></property>
		<!-- 加载SqlMapConfig.xml配置文件 -->
		<property name="configLocation" value="classpath:SqlMapConfig.xml"></property>
	</bean>
	
	<!-- 配置拦截器 -->
	<mvc:interceptors>
		<!-- 多个拦截器顺序执行 -->
		<mvc:interceptor>
			<!-- /**表示拦截所有url，包括子url -->
			<mvc:mapping path="/**"/>
			<!-- 自定义的拦截器的类 -->
			<bean class="com.stx.interceptor.LoginInterceptor"></bean>
		</mvc:interceptor>
	</mvc:interceptors>
	
	<!-- 处理器映射器，适配器 -->
	<mvc:annotation-driven>
		<!-- 如果不配置fastjson的信息，则不需要写mvc:message-converters即子标签 -->
		<!-- 设置不使用默认的消息转换器 -->
		 <mvc:message-converters register-defaults="true">
		 	<!-- 配置jastjson，java对象与json数据相互转化，需要导入fastjson-1.2.20.jar -->
		 	<bean id="" class="com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter">
		 		<property name="supportedMediaTypes">
		 			<list>
		 				<value>text/html;charset=UTF-8</value>
		 				<value>application/json;charset=UTF-8</value>
		 			</list>
		 		</property>
		 	</bean> 
		 </mvc:message-converters>
	</mvc:annotation-driven>
	
	<!-- 不拦截静态资源 -->
	<mvc:default-servlet-handler/>	
	<!--<mvc:resources location="/js/" mapping="/js/**"/>
	<mvc:resources location="/css/" mapping="/css/**"/>
 	-->
 	
 	<!-- 配置视图解析器 -->
  	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver"></bean>
	
	 <!-- 配置Mapper的扫描器，相当于SqlMapConfig.xml文件中的  
	    <mappers>  
	        <package name="cn.itcast.ssm.mapper"/>  
	    </mappers>  
     -->  
   <!--  如果需要扫描多个包，中间用逗号隔开   --> 
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">   
        <property name="basePackage" value="com.stx.mapper"></property>  
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>  
    </bean>
  
 
    <!-- 扫描包 -->
	<context:component-scan base-package="com.stx"></context:component-scan>
  
</beans>